{"version":3,"sources":["serviceWorker.ts","components/page/page.tsx","components/home/home.tsx","components/about/about.tsx","components/notfound/notfound.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Page","react_default","a","createElement","Navbar","bg","variant","Brand","href","Nav","Link","NavDropdown","title","id","Item","Container","Col","this","props","children","className","target","Component","Home","page_page","About","NotFound","style","textAlign","ReactDOM","render","react_router_dom","basename","process","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","highlight","initHighlightingOnLoad"],"mappings":"8MAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,mNCkBSC,mLA9Bb,OACCC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACzBL,EAAAC,EAAAC,cAACC,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,cACAP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACCR,EAAAC,EAAAC,cAACM,EAAA,EAAIC,KAAL,CAAUF,KAAK,KAAf,QACAP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAaC,MAAM,WAAWC,GAAG,YAChCZ,EAAAC,EAAAC,cAACQ,EAAA,EAAYG,KAAb,CAAkBN,KAAK,qCAAvB,OACAP,EAAAC,EAAAC,cAACQ,EAAA,EAAYG,KAAb,CAAkBN,KAAK,wCAAvB,WAEDP,EAAAC,EAAAC,cAACM,EAAA,EAAIC,KAAL,CAAUF,KAAK,8BAAf,UAGFP,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACCd,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEC,KAAKC,MAAMC,WAGdlB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,iBACdnB,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,mDACRF,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,iHAETF,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,iBACdnB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,8CAA8Ca,OAAO,UAA7D,mCAzBWC,aCkBJC,mLAhBb,OACCtB,EAAAC,EAAAC,cAACqB,EAAD,KACCvB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,qBAEJF,EAAAC,EAAAC,cAAA,oCAEAF,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,6BAAR,sBAAf,oBACAP,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,iCAAR,WACJP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,8BAAR,kBAXUc,aCSJG,mLAPP,OACIxB,EAAAC,EAAAC,cAACqB,EAAD,aAHQF,aCWLI,2LATb,OACCzB,EAAAC,EAAAC,cAACqB,EAAD,KACCvB,EAAAC,EAAAC,cAAA,MAAIwB,MAAO,CAAEC,UAAW,UAAYR,UAAU,aAA9C,OACAnB,EAAAC,EAAAC,cAAA,KAAGwB,MAAO,CAAEC,UAAW,WAAvB,eALmBN,cCavBO,IAASC,OACR7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAeC,SAAUC,IACxBhC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACCjC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjCtB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,OAAOC,UAAWZ,IACpCxB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOG,UAAWX,OAGHY,SAASC,eAAe,SL+GrC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,eK1GnBC,IAAUC","file":"static/js/main.5be826bc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './page.css';\nimport { Navbar, Nav, Container, NavDropdown, Col } from 'react-bootstrap';\n\nclass Page extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\n\t\t\t\t\t<Navbar.Brand href=\"/\">cassaundra</Navbar.Brand>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t\t<NavDropdown title=\"Projects\" id=\"projects\">\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"https://github.com/cassaundra/col\">Col</NavDropdown.Item>\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"https://github.com/cassaundra/rocket\">Rocket</NavDropdown.Item>\n\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t<Nav.Link href=\"https://blog.cassaundra.io\">Blog</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar>\n\t\t\t\t<Container>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</Col>\n\t\t\t\t</Container>\n\t\t\t\t<div className=\"crypto-footer\">\n\t\t\t\t\t<p>BTC: <code>13wXDHFfLw4UVgfMY6Md9XQRp6mAnbLTGf</code></p>\n\t\t\t\t\t<p>XMR: <code>8AXRLjdDLuaW6RK4fU9NvRgPQh6Ri2qT3ZkHXPrptrFzfmLZw75kra1VLEWwzEt4jYBUEHA5bG7k3GU4a1XbMJNPN9ExY3q</code></p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"source-footer\">\n\t\t\t\t\t<p><a href=\"https://github.com/cassaundra/cassaundra-io\" target=\"_blank\">View source on GitHub</a></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Page;\n","import React, { Component } from 'react';\nimport './home.css';\nimport Page from '../page/page';\n\nclass Home extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Page>\n\t\t\t\t<h1><b>Welcome</b></h1>\n\n\t\t\t\t<p>Thanks for stopping by.</p>\n\n\t\t\t\t<p>Email me at <a href=\"mailto:cass@cassaundra.io\">cass@cassaundra.io</a> or visit me at:</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a href=\"https://github.com/cassaundra\">GitHub</a></li>\n\t\t\t\t\t<li><a href=\"https://blog.cassaundra.io\">Blog</a></li>\n\t\t\t\t</ul>\n\t\t\t</Page>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Page from '../page/page';\n// import './about.css';\n\nclass About extends Component {\n    render() {\n        return (\n            <Page>\n            </Page>\n        );\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport Page from '../page/page';\nimport './notfound.css';\n\nclass NotFound extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Page>\n\t\t\t\t<h1 style={{ textAlign: \"center\" }} className=\"display-3\">404</h1>\n\t\t\t\t<p style={{ textAlign: \"center\" }}>:-(</p>\n\t\t\t</Page>\n\t\t);\n\t}\n}\n\nexport default NotFound;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n// highlight.js theme\nimport 'highlight.js/styles/nord.css'\n\nimport highlight from 'highlight.js'\n\nimport Home from './components/home/home';\nimport About from './components/about/about';\nimport NotFound from './components/notfound/notfound';\n\nReactDOM.render(\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<div>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t<Route exact path=\"/abt\" component={About} />\n\t\t\t\t<Route component={NotFound} />\n\t\t\t</Switch>\n\t\t</div>\n\t</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nhighlight.initHighlightingOnLoad();\n"],"sourceRoot":""}