{"version":3,"sources":["serviceWorker.ts","components/page/page.tsx","components/home/home.tsx","components/about/about.tsx","components/notfound/notfound.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Page","Navbar","bg","variant","Brand","href","Nav","Link","NavDropdown","title","id","Item","Container","Col","this","props","children","className","target","rel","Component","addressObfuscated","Home","state","email","undefined","showState","event","preventDefault","address","String","fromCharCode","apply","map","a","i","setState","renderEmail","onClick","About","NotFound","style","textAlign","ReactDOM","render","basename","process","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","highlight","initHighlightingOnLoad"],"mappings":"0OAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wJCkBSC,E,iLA9Bb,OACC,6BACC,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACzB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,cACA,kBAACC,EAAA,EAAD,KACC,kBAACA,EAAA,EAAIC,KAAL,CAAUF,KAAK,KAAf,QACA,kBAACG,EAAA,EAAD,CAAaC,MAAM,WAAWC,GAAG,YAChC,kBAACF,EAAA,EAAYG,KAAb,CAAkBN,KAAK,qCAAvB,OACA,kBAACG,EAAA,EAAYG,KAAb,CAAkBN,KAAK,wCAAvB,WAED,kBAACC,EAAA,EAAIC,KAAL,CAAUF,KAAK,8BAAf,UAGF,kBAACO,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACEC,KAAKC,MAAMC,WAGd,yBAAKC,UAAU,iBACd,mCAAQ,qEACR,mCAAQ,mIAET,yBAAKA,UAAU,iBACd,2BAAG,uBAAGZ,KAAK,8CAA8Ca,OAAO,SAASC,IAAI,uBAA1E,gC,GAzBWC,aCAbC,EAAoB,CAAC,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,KA8ClHC,E,2MAvCLC,MAA6B,CACrCC,WAAOC,G,EAGRC,UAAY,SAACC,GACZA,EAAMC,iBAEN,IAAIC,EAAUC,OAAOC,aAAaC,MAAM,KAAMX,EAAkBY,KAAI,SAACC,EAAGC,GAAJ,OAAUD,EAAI,EAAKC,EAAI,MAE3F,EAAKC,SAAS,CACbZ,MAAOK,K,EAITQ,YAAc,WACb,OAAI,EAAKd,MAAMC,MACP,uBAAGnB,KAAM,UAAY,EAAKkB,MAAMC,MAAOP,UAAU,SAAS,EAAKM,MAAMC,OAErE,0BAAMc,QAAS,EAAKZ,UAAWT,UAAU,gBAAzC,sB,wEAKR,OACC,kBAAC,EAAD,KACC,4BAAI,uCAEJ,sDAEA,0CAAgBH,KAAKuB,cAArB,oBACA,4BACC,4BAAI,uBAAGhC,KAAK,iCAAR,WACJ,4BAAI,uBAAGA,KAAK,8BAAR,e,GAjCUe,aCGJmB,E,iLAPb,OACC,kBAAC,EAAD,U,GAHiBnB,aCWLoB,G,wLATb,OACC,kBAAC,EAAD,KACC,wBAAIC,MAAO,CAAEC,UAAW,UAAYzB,UAAU,aAA9C,OACA,uBAAGwB,MAAO,CAAEC,UAAW,WAAvB,Y,GALmBtB,cCavBuB,IAASC,OACR,kBAAC,IAAD,CAAeC,SAAUC,IACxB,6BACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3B,IACjC,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,OAAOC,UAAWV,IACpC,kBAAC,IAAD,CAAOU,UAAWT,OAGHU,SAASC,eAAe,SL+GrC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,gBK1GnBC,IAAUC,0B","file":"static/js/main.e19c9a33.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './page.css';\nimport { Navbar, Nav, Container, NavDropdown, Col } from 'react-bootstrap';\n\nclass Page extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\n\t\t\t\t\t<Navbar.Brand href=\"/\">cassaundra</Navbar.Brand>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t<Nav.Link href=\"/\">Home</Nav.Link>\n\t\t\t\t\t\t<NavDropdown title=\"Projects\" id=\"projects\">\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"https://github.com/cassaundra/col\">Col</NavDropdown.Item>\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"https://github.com/cassaundra/rocket\">Rocket</NavDropdown.Item>\n\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t<Nav.Link href=\"https://blog.cassaundra.io\">Blog</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar>\n\t\t\t\t<Container>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</Col>\n\t\t\t\t</Container>\n\t\t\t\t<div className=\"crypto-footer\">\n\t\t\t\t\t<p>BTC: <code>13wXDHFfLw4UVgfMY6Md9XQRp6mAnbLTGf</code></p>\n\t\t\t\t\t<p>XMR: <code>8AXRLjdDLuaW6RK4fU9NvRgPQh6Ri2qT3ZkHXPrptrFzfmLZw75kra1VLEWwzEt4jYBUEHA5bG7k3GU4a1XbMJNPN9ExY3q</code></p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"source-footer\">\n\t\t\t\t\t<p><a href=\"https://github.com/cassaundra/cassaundra-io\" target=\"_blank\" rel=\"noopener noreferrer\">View source on GitHub</a></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Page;\n","import React, { Component, MouseEvent } from 'react';\nimport './home.css';\nimport Page from '../page/page';\n\nconst addressObfuscated = [0x64, 0x63, 0x74, 0x75, 0x41, 0x65, 0x62, 0x75, 0x74, 0x63, 0x76, 0x70, 0x65, 0x74, 0x62, 0x30, 0x6A, 0x71];\n\ntype HomeState = {\n\temail?: string\n}\n\nclass Home extends Component<object, HomeState> {\n\treadonly state: Readonly<HomeState> = {\n\t\temail: undefined,\n\t}\n\n\tshowState = (event: MouseEvent) => {\n\t\tevent.preventDefault();\n\n\t\tlet address = String.fromCharCode.apply(null, addressObfuscated.map((a, i) => a - 1 - (i % 2)));\n\n\t\tthis.setState({\n\t\t\temail: address,\n\t\t});\n\t}\n\n\trenderEmail = () => {\n\t\tif (this.state.email) {\n\t\t\treturn <a href={\"mailto:\" + this.state.email} className=\"email\">{this.state.email}</a>\n\t\t} else {\n\t\t\treturn <span onClick={this.showState} className=\"hidden_email\">[click to reveal]</span>\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Page>\n\t\t\t\t<h1><b>Welcome</b></h1>\n\n\t\t\t\t<p>Thanks for stopping by.</p>\n\n\t\t\t\t<p>Email me at {this.renderEmail()} or visit me at:</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><a href=\"https://github.com/cassaundra\">GitHub</a></li>\n\t\t\t\t\t<li><a href=\"https://blog.cassaundra.io\">Blog</a></li>\n\t\t\t\t</ul>\n\t\t\t</Page>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Page from '../page/page';\n// import './about.css';\n\nclass About extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Page>\n\t\t\t</Page>\n\t\t);\n\t}\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport Page from '../page/page';\nimport './notfound.css';\n\nclass NotFound extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Page>\n\t\t\t\t<h1 style={{ textAlign: \"center\" }} className=\"display-3\">404</h1>\n\t\t\t\t<p style={{ textAlign: \"center\" }}>:-(</p>\n\t\t\t</Page>\n\t\t);\n\t}\n}\n\nexport default NotFound;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n// highlight.js theme\nimport 'highlight.js/styles/nord.css'\n\nimport highlight from 'highlight.js'\n\nimport Home from './components/home/home';\nimport About from './components/about/about';\nimport NotFound from './components/notfound/notfound';\n\nReactDOM.render(\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<div>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t<Route exact path=\"/abt\" component={About} />\n\t\t\t\t<Route component={NotFound} />\n\t\t\t</Switch>\n\t\t</div>\n\t</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nhighlight.initHighlightingOnLoad();\n"],"sourceRoot":""}